[
["index.html", "Fishery: Trade Module Welcome Migration Team", " Fishery: Trade Module Luís G Silva e Silva and Christian Mongeau Statistician - ESSD - Methodological Innovation Team Welcome This document describes the main institutional actors involved in the migration as well as the FISHERIES TRADE resources (code lists, datasets, data tables) created to support the SWS plugins (R modules) to meet technical unit requirements. Furthermore, the modules are presented in the form of chapters providing a detailed description of their workflows involving input → processing → output as well as results showing whether the modules have lived up to expectations. Useful links: Fisheries Trade Tool (Shiny App) Fisheries Trade Tool (source) Statistical Working System faoebx5 R package IMPORTANT: Use the Chrome browser to have a correct vizualization of HTML outputs in this online document. Migration Team Any migration into the SWS requires the interaction between at least three actors: The technical unit interested in automating either some or all its analytical processes in the SWS. The technical unit can be treated as client demanding services from the counterparts responsible for the implementation of its data and statistical assets in the SWS. Therefore, a successful Fisheries Trade migration depends on the coordination between the technical division and other parts. In the Fisheries Trade - SWS migration framework the technical unit is called FIAS and is represented by: Stefania Vannuccini Senior Fishery Officer (FIAS) Adrienne Egger Fishery Officer (FIAS) Barbara Senfter Statistical clerk (FIAS) Thomas Berger Fishery Statistician (FIAS) The ESS - Methodological Innovation Team (ESS - SWS) responsible for the implementation and documentation of the required statistical processes. From the ESS - SWS team the focal points for Fishery Trade - SWS migration are: Carola Fabi Senior Statistician (ESSD) Luís Silva Statistician (ESSD) Christian Mongeau Statistician (ESSD) The CIO - SWS the primary backend and frontend maintainer of the SWS and responsible for the implementation and documentation of non-statistical processes (IT infrastructure). The CIO - SWS team have as interlocutors: Enrico Anello Full Stack Developer (CIO) Matteo Terrinoni Full Stack Developer (CIO) John Rowell Information Technology Officer (CIO) "],
["sec-data.html", "1 Data 1.1 UNSD - COMTRADE 1.2 Eurostat 1.3 TDM and other sources 1.4 Data Builder", " 1 Data There are three main data sources for trade data involved in the Fishreries Trade module: UNSD, Eurostat, and TDM. The raw data are harvested by the Statistical Working System Team for both UNSD (Comtrade) and Eurostat by downloading through their API’s respectively, while the data from TDM database is provided by the FIAS. For less than ten countries, we get some information from other sources: FTR, national websites, etc. The frequency of harvesting the trade data needs to be agreed with ESS. There is an effort of the ESS and SWST to provide the user of the trade data a tool that enables users to harvest the data whenever they want. This tool and the process to harvest trade data is currently under development and aim to harvest only data from Comtrade and Eurostat. The other source should be define by FIAS unit. Currently, Comtrade and Eurostat data are stored in different data tables under the domain trade-input-data. The partner of data tables name that store the Comtrade data is “ct_tariffline_unlogged_YYYY”, where YYYY means the respective year, while for the Eurostat is “ce_combinednomenclature_unlogged_YYYY”. The TDM data is stored at data table “fishtrade_tdm_YYYY” under domain Fisheries Commodities. The other sources have the same standard name “fishtrade_other_sources_YYYY” under domain Fisheries Commodities. Altought, there are different data source, the data structure should have the same shape and columns. In Table 1.1 is shown the chapters that must be downloaded to cover all commodities for the Fisheries Trade Module. The chapters were defined and validated by the technical unit. Table 1.1: Chapters considered for Fisheries Trade module Code Description 03 Fish and crustaceans, molluscs and other aquatic invertebrates 05 Animal originated products; not elsewhere specified or included 12 Oil seeds and oleaginous fruits; miscellaneous grains, seeds and fruit, industrial or medicinal plants; straw and fodder 13 Lac; gums, resins and other vegetable saps and extracts 15 Animal or vegetable fats and oils and their cleavage products; prepared animal fats; animal or vegetable waxes 16 Meat, fish or crustaceans, molluscs or other aquatic invertebrates; preparations thereof 21 Miscellaneous edible preparations 23 Food industries, residues and wastes thereof; prepared animal fodder After filtering these chapters, some codes must be excluded, which are those codes that start by 030760 - Snails, Other Than Sea Snails, Live, Fresh, Chilled, Frozen, Dried, Salted Or In Brine or 160558 - Prepared Or Preserved Snails, Other Than Sea Snails. These codes are stored at data table fishtrade_param_hs_exclude under domain Fisheries Commodities. In Table 1.2, we go through the chapter by selecting the commodities which the code starts with the code shown in the table below. In this case, the filter is more specific than the previous one. Table 1.2: Codes considered for Fisheries Trade module Code Description 03 Fish and crustaceans, molluscs and other aquatic invertebrates 0508 Coral and similar materials, unworked or simply prepared, shells of molluscs, crustaceans or echinoderms and cuttle-bone, not cut to shape powder and waste thereof 0509 Sponges, natural; of animal origin 051191 Animal products; of fish or crustaceans, molluscs or other aquatic invertebrates; dead animals of chapter 03, unfit for human consumption 051199 Animal products; n.e.c. in chapter 5 121220 Seaweeds and other algae; of a kind used primarily for human consumption, fresh, chilled, frozen or dried, whether or not ground 130231 Mucilages and thickeners; agar-agar, whether or not modified, derived from vegetable products 1504 Fats and oils and their fractions of fish or marine mammals; whether or not refined, but not chemically modified 1604 Prepared or preserved fish; caviar and caviar substitutes prepared from fish eggs 1605 Crustaceans, molluscs and other aquatic invertebrates, prepared or preserved 210390 Sauces and preparations therefor; mixed condiments and mixed seasonings 230120 Flours, meals and pellets; of fish or of crustaceans, molluscs or other aquatic invertebrates 230990 Dog or cat food; (not put up for retail sale), used in animal feeding 1.1 UNSD - COMTRADE The tariff line data from UNSD contains multiple rows with identical combination of reporter/partner/commodity/flow/year/qunit (unit of quantity). Those are transactions registered separately, thus rows containinig non-missing values and quantities can be aggregated. Missing variables of the same type are also aggregated if they are all missing, as they will produce a missing aggregated value for missing disaggregated values while correctly summing the remaining variables. Commodities at Tariff Line level, i.e., at the national code level. The code is composed by at least six digits up to twelve, where the first six digits follow the Harmonized System, and the other digits are country-specific. The Harmonized System is an international nomenclature for the classification of products. It allows participating countries to classify traded goods on a common basis for customs purposes. At the international level, the Harmonized System (HS) for classifying goods is a six-digit code system. — Harmonized System UNSD Tariff line data reports area code with Tariff line M49 standard (which are different for official M49). The area code is converted in FAO country code using a specific conversion table (unsdpartnersblocks under domain trade-reference-files) provided by Team ENV. Countries that are not supposed to exist in the year for which the module runs are removed from the data (e.g., Serbia did not exist as a single country in 2004). European countries (as reporters) already in Eurostat data are removed. Area codes not mapping to any FAO country code are separately saved and removed from further analyses. All countries mapping to code 252 (which correponds to undefined areas) are mapped to the 896 M49 code (“Other nei”). The flow codes of re-Import (code 4) are recoded into Import (code 1) and codes of re-Export (code 3) are kept. This procedure is applied following UNSD standards: Exports of a country can be distinguished as exports of domestic goods and exports of foreign goods. The second class is generally referred to as re-exports. The exports shown in our database contain both the exports of domestic and foreign goods. Re-exports are exports of foreign goods in the same state as previously imported; they are to be included in the country exports. It is recommended that they be recorded separately for analytical purposes. This may require the use of supplementary sources of information in order to determine the origin of re-exports, i.e., to determine that the goods in question are indeed re-exports rather than the export of goods that have acquired domestic origin through processing. Re-imports are goods imported in the same state as previously exported. They are included in the country imports. It is recommended that they be recorded separately for analytical purposes. This may require the use of supplementary sources of information in order to determine the origin of re-imports, i.e., to determine that the goods in question are indeed re-imports rather than the import of goods that have acquired foreign origin through processing. There are several reasons why an exported good might return to the country of origin. The exported good might be defective, the importer might have defaulted on payments or cancelled the order, the authorities might have imposed an import barrier, or demand or prices in the country of origin might have made it worthwhile to bring the good back. — See http://unstats.un.org/unsd/tradekb/Knowledgebase/Reexports-and-Reimports 1.2 Eurostat Only numeric codes of reporters and partners are kept (letters are not allowed; basically this removes the “EU” total). Only numeric CN8 codes (hs) are kept (letters are not allowed). Only stat_regime equal to 4 is kept. In this system [“Statistical regime 4” or “Total trade”], the recorded aggregates include all goods entering or leaving the economic territory of a country with the exception of simple transit trade. In particular, all goods received into customs warehouses are recorded as imports, regardless of whether they subsequently go into free circulation in the Member State of receipt. Similarly, outgoing goods from customs warehouses are included in the general trade aggregates, at the time they leave the Member State. — See pag. 10 in DG Trade Statistical Guide, July 2019, https://trade.ec.europa.eu/doclib/docs/2013/may/tradoc_151348.pdf Eurostat classifies areas in their geonomenclature. These codes are converted in FAO country codes using a specific conversion table, stored in the SWS, provided by Team B/C. Area codes not mapping to any FAO country code is reported and the records for these area codes are removed. All countries mapping to code 252 (which correpond undefined areas) are mapped to the 896 M49 code (“Other nei”). Commodity codes are reported in CN8 codes (Combined Nomenclature 8 digits). The codes are converted in FCL (FAO Commodity List) codes. Values are converted from EUR to USD using the table, stored in the SWS, with avarage EUR/USD exchange rate for each year provided by Team B/C. 1.3 TDM and other sources The TDM and other sources are processed using the same function that processing the data from Comtrade. Some small adaption should be done to fit well the data from these different data sources. 1.4 Data Builder The Data Builder is a module developed to build the data by choosing the country, year, and data source for each flow (import, export). For example, the user can select the year 2019, Brazil, and TDM for both sources. Given this selection, the data builder will get the raw data from the specific data sources and then process it. The process is composed basically by, renaming columns, filtering chapter, converting M49 codes, and recode variables. After to process the raw data the Data Builder store them in the SWS as the data table fishtrade_built_data under domain “Fisheries Commodities”. In Figure 1.1, we show the data build workflow. The user must select the country, year, and data source, and then the module will save the data built into SWS for being used for the next processes. Once that the user have build and validated the data, the next step is to perform a standardization/mapping. The details are divided between UNSD Tariff line and Eurostat due to the nature of the differences among the two datasets. Figure 1.1: Data builder data flow. 1.4.1 Functions get_tradedata: It is a wrapper function that includes all functions for several data sources. It works like a hub. get_tldata: It gets data from UNSD data source. get_esdata: It gets data from Eurostat data source. get_tdmdata: It gets data from TDM data source In Figure 1.2, we show the schema to build the data, as well as the datatables and domains involved in the process. Figure 1.2: Data builder: functions schema "],
["sec-mapping.html", "2 Mapping trade data 2.1 Definitions 2.2 Mapping Module 2.3 Functions", " 2 Mapping trade data In this section, we show how the mapping process is performed under the data built by the user. Commodity codes are reported as HS codes (Harmonized Commodity Description and Coding System) or CN codes for European countries, which are mapped into ISSCFC (FAO Commodity List) codes. This step is performed using some auxiliar tables stored in the SWS. 2.1 Definitions Mappings to be improved: Data from UNSD data source are often reported at the Tariff Line level, that is, the commodities are country-specific, and hence we have precise information about the description of those commodities. Nevertheless, the link between these codes and ISSCFC codes may be built using only the six first digits of the Tariff Line code, that is, we loss information, so that we may improve these mappings. Unmapped: Commodity code without any correspondent ISSCFC code in the Trade Map Table, and also in the master files: HS Master file for non-European countries and EUCN Master file for European countries. Scheda code: Internal identifier in Commodit Software (old system). Given the combination of a Country | Trade Flow | Fao Group | Tariff line it is generated a sequential code. This code format is the combination between the sequential code and the FAO Group resulting in F.SSSS, where F is the FAO Group and SSSS is the sequential code. 2.2 Mapping Module In Figure 2.1, we show the mapping module workflow. As all modules are connected , the user will be able to run the Mapping Module only for those countries-year that the data was built. Therefore, the main input data is the data table fishtrade_data_built, and hence the user must query this table by selecting the year and country through the Fisheries Trade Tool. Inputs: fishtrade_data_built fishtrade_trade_map hs_masterfile cn_masterfile Parameters: year, reporter Figure 2.1: Mapping Module workflow The Trade Map Table stores the mapping between Tariff Line and ISSCFC code, which are the mappings developed by the FIAS team. Therefore, we should try to map all data stored in the datatable fishtrade_data_built using this data table. Otherwise, if some commodities code could not be mapped, then we have to use the Master files mappings, which depends on whether the country is European or not. Figure 2.1 shows the back-end of the Mapping Module, while Figure 2.2 shows the front-end. In the left side, we show the buttons which allows us to choose which country and year we wish to run the mapping module. While in the right side, we show the mapping tool with option to add, improve, and complete the mappings. The buttons “Save” and “Update” in the right side are the same that we show in Figure 2.1. Figure 2.2: Mapping Module: fron-end 2.3 Functions run_mapping_module: It is the main function for the Mapping Module. get_cn_masterfile: It gets the CN masterfile to map European countries. get_hs_masterfile: It gets the HS masterfile to map non-European countries. "],
["sec-missing.html", "3 Missing data Data imputation summary Imputation Flow 3.1 Mathematical conversion 3.2 Partially Agreggation 3.3 Methods 3.4 Functions", " 3 Missing data It is very often that some countries do not reporter the weight of the commodity traded, which might generate the loss of information, and also the comparison between regions will not be able to be performed. In this section, we describe all the processes involved in the estimation of the missing, imputation methods, mathematical correction, and the validation tool. There are some codes that should be removed from the the imputation module. These codes were listed by the FIAS team and it is stored in the datatable fishtrade_hs_not_impute under Fisheries Commodities domain. Data imputation summary Data source: Domain: Fisheries Commodities Input data: fishtrade_built_data Output data: fishtrade_data_imputed: The data imputed is stored in this table to be validated by the expert. It is known as a working table. fishtrade_data_imputed_validated: This is almost a copy from the fishtrade_data_imputed datatable, but in this datatable the user is not allowed to change anything. All changes should be done over the datatable fishtrade_data_imputed, and then can be export to the final data table fishtrade_data_imputed_validated. The imputation is performed at the partner level, i.e, the shipments are aggregated before the imputation. There are 16 methods to impute the missing weights. 8 methods perform the imputation at Tariff Line level. 8 methods perform the imputation at 6 digits (HS) level. Some automatic imputations can not be achieved. The main reason for this is there is no enough information to execute any method robustly. It is necessary the user’s intervention (manual imputation) Imputation Flow Figure 3.1 shows the imputation module flow. The first step is to build the helper tables, which use as input the data tables stored in the trade-input-data domain. Once the helper tables have been built, the next step is to get the data to be imputed from the data table fishtrade_built_data. The Imputation Module output is stored at the data table fishtrade_data_imputed. This data table works as a working table because the user can check the imputation by performing the manual imputation if needed. After the expert validation the data is exported to the production data table fishtrade_data_imputed_validated. The order to apply the methods can be found at Section 3.4, and also links to the source of the functions. Figure 3.1: Imputation Module Flow. 3.1 Mathematical conversion The first step in the Imputation Module is the mathematical conversion. This step is not considered as an imputation method once we are just converting the units reported by the country. In Figure 3.2, the left side shows the conversions applied in the quantity variable and also the weight. The right side shows all type of unit reported by the countries. When some countries do not report the weight value, but they report the quantity and also the quantity unit, hence it is possible to retrieve the weight, if the unit is reported in kilogram (code = 8). The other conversions aim to put all quantities in the same unit. Function: unit_conversion Figure 3.2: Imputation module: mathematical conversions 3.2 Partially Agreggation The tariff line data from UNSD contains multiple shipments with identical combination of reporter/partner/commodity/flow/year/qunit (unit of quantity). Those are transactions registered separately, thus rows containinig non-missing values and quantities can be aggregated. Missing variables of the same type are also aggregated if they are all missing, as they will produce a missing aggregated value for missing disaggregated values while correctly summing the remaining variables. In Figure 3.3, we show an example of this. The green rectangle shows the values reported that can be aggregated, and in the blue rectangle shows the missing values that will also aggregated. This figure show how the is reported, and after the partial aggregation. Note that the combination of year = 2016 | reporter = 76| partner = 764 | flow = 1 | hs = 030119000000 | qunit = 5 after the partially aggregation result in two rows. One composed by the values aggregated, and another with the missing values aggregated. Figure 3.3: Imputation module: partially aggregation 3.3 Methods In this section, we describe the methods used to impute the missing weight values. In Sections 3.3.1 and 3.3.3, we introduce the Helper Tables used to estimate the weight per unit, and the Unit Values for several levels of aggregation respectively. The imputation methods that use these Helper tables are described in the Section 3.3.5. The other methods are explained in next sections. 3.3.1 Helper Tables In this Section, we show the shape of the table and variables which composed each auxiliary table. For each table we describe brefily how the the values were estimated. For a full detailed explanation can be found in the Sections 3.3.2 and 3.3.3. Figure 3.4: Helper Table: weight estimated per quantity unit for the levels of aggregation: reporter-year; reporter; region-year. Figure 3.5: Helper Table: weight estimated per quantity unit for the levels of aggregation: region; HS at the six digits level; year. Figure 3.6: Helper Table: unit value estimated for several levels of aggregation: reporter-year; region-year; global-year. 3.3.2 Estimate weight per unit 3.3.2.1 General Approach Figure 3.7: Helper Tables: general approach that is used in the building of the helper tables. 3.3.2.2 Reporter - Year Figure 3.8: Helper Tables: weight per unit estimated by the median of partners by year 3.3.2.3 Reporter Figure 3.9: Helper Tables: weight per unit estimated by the median of partners across the years. 3.3.2.4 Region-Year Figure 3.10: Helper Tables: weight per unit estimated by the median of region by year. 3.3.2.5 Global-Year Figure 3.11: Helper Tables: weight per unit estimated by the median of commodity by year. 3.3.2.6 Global Figure 3.12: Helper Tables: weight per unit estimated by the median of commodity. 3.3.3 Estimate Unit Value 3.3.3.1 General Approach Figure 3.13: Helper Tables: general approach that is used in the building of the helper tables. 3.3.3.2 Reporter - Year Figure 3.14: Helper Tables: unit value estimated at the tariff line level by the median of partners by year. 3.3.3.3 Region - Year Figure 3.15: Helper Tables: unit value estimated by the median of region by year using 6 digits (HS). 3.3.3.4 Global - Year Figure 3.16: Helper Tables: unit value estimated by the median of commodity using 6 digits (HS) 3.3.4 Imputation by partially reported weight Figure 3.17: Helper Tables: Impute the missing weight with the ratio between the given value and unit value calculated using only the valid monetary values. (TL level). 3.3.5 Imputation using the helper tables Figure 3.18: Helper Tables: imputation methods using the auxiliary tables. 3.3.6 Interpolate Unit Value Figure 3.19: Helper Tables: Interpolate the UV using the previous, or next (year) available value, by reporter, partner, flow, and TL. 3.3.7 Unit Value Total Figure 3.20: Helper Tables: The Unit Value Total is the ratio between the summing of the weights and the summing of the quantities, by year, reporter, flow, and TL. 3.3.8 Interpolate Unit Value Total Figure 3.21: Helper Tables: Interpolate using the Unit Value Total (TL level) of previous year. 3.3.9 Global Year Expanded Figure 3.22: Helper Tables: Expand the Global-Year table by all the combination among: year, flow, and HS. 3.3.10 Global Year Expanded - HS6 Figure 3.23: Helper Tables: Compute the median of Unit Value found in the previous step by year, flow, and HS. 3.4 Functions The imputation methods are applied as the order below: Imputation by partially reported weight Level: Tariff Line Function: partially_aggregation Interpolate Unit Value Level: Tariff Line Function: uv_hs_interpolate Reporter - Year Level: Tariff Line Function: wq_uv_imputation Unit Value: Reporter - Year Level: Tariff Line Function: wq_uv_imputation Reporter - Weight Level: Tariff Line Function: wq_uv_imputation Unit Value Total Level: Tariff Line Function: wq_uv_imputation Unit Value Total Level: Tariff Line Function: wq_uv_imputation Unit Value: Region - Year Level: HS at the six digits level Function: wq_uv_imputation Unit Value: Global - Year Level: HS at the six digits level Function: wq_uv_imputation Region Level: HS at the six digits level Function: wq_uv_imputation Global - year Level: HS at the six digits level Function: wq_uv_imputation Global Level: HS at the six digits level Function: wq_uv_imputation Interpolate Unit Value Total Level: HS at the six digits level Function: run_imputation_module Global Year Expanded Level: HS at the six digits level Function: run_imputation_module Global Year Expanded - HS6 Level: HS at the six digits level Function: run_imputation_module "],
["outlier-detection.html", "4 Outlier Detection 4.1 Methods for outlier detection 4.2 Examples 4.3 Boxplot 4.4 Locally Estimated Scatterplot Smoothing (LOESS)", " 4 Outlier Detection The outlier detection is unlocked to be run only for the countries for which the imputation has been completed. Therefore, the input data is the data table fishtrade_data_imputed_validated under domain Fisheries Commodities. The main goal of the outlier detection in the Fisheries Module is to figure out discrepancies under the trade data. In the outlier detection process, we should be able to validate the outliers detected, once some values considered as anomaly can be part of the nature of the data. Besides, the methods should be flexible such way the user should be able to run the detection at different levels of aggregation: From the most aggregated one: All reporters / All Flows / All FAO major groups / All partners To the most detailed one: Reporter / Flow / Tariff line / Partner. No matter the level of aggregation at which the detection is carried out, all modifications or corrections proposal are made at the most detailed level: Reporter | Flow | Tariff line | Partner. When the outlier detection is done at a higher level than the most detailed one (Reporter | Flow | Tariff line | Partner), the user can drill down in order to get to the most general level. When an outlier is identified at an aggregated level, then the tool propagates the correction to lower levels proportionally. Edits are done at the Reporter | Flow | Tariff line | Partner level. The fields that the user can edit are the quantity, the value, the flags and the remarks fields. The unit value and all of the aggregates can be recalculated on the fly after an edit in order to see the implications of the change. In Figure 4.1 is shown the workflow of the outlier detection module. Function: run_outlier_detection_module Figure 4.1: Outlier Detection Flow. 4.1 Methods for outlier detection In the Outlier Detection Module is applied two different methods. One that considers the data points as independent across the years, and another that takes account of the time correlation. The idea is to be able to find discrepancies when we compare one figure to the mass of data points, and the second one allows to check if the value is out of the data trend. The outlier detection methods are applied in the unit value (uv), which is the ratio between the monetary transaction value and its weight, weight, and value variables. In this first step of this procedure, we attempt to figure out outliers in the aggregate level, and then we try to fix the transactions (disaggregated level) that were responsible for generating the outliers detected. 4.1.1 Boxplot rule A boxplot is resource graphic to summarise a distribution of data based on a five numbers summary: “minimum”, first quartile (Q1), median, third quartile (Q3), and “maximum”. It allows us to visualise the outliers and their values. Also, if the data is symmetrical and how tightly your data is grouped. In Figure 4.2 is exemplified the five numbers summary. Figure 4.2: Example of a boxplot. Source: https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51 The steps below aim to apply the boxplot rule in order to figure out discrepant values. Basically, the boxplot rule has an only parameter, \\(k\\), which is used to compute the upper and lower limits of the boxplot whiskers. In Figure 4.2 the parameter \\(k\\) is set equal \\(1.5\\), which is the value for the traditional boxplot. Set the coefficient \\(k\\), for instance \\(k = 5\\). Compute the percentiles: 25% (\\(Q_1\\)), and 75% (\\(Q_3\\)). Compute the interquartile range (IQR): \\(IQR = Q_3 - Q_1\\) Compute \\(\\text{limsup} = Q_3 + k \\times IQR\\) Compute \\(\\text{liminf} = Q_1 - k \\times IQR\\) If \\(x &gt; \\text{limsup} \\mid x &lt; \\text{liminf}\\), then \\(x\\) is a outlier. Note that there are no assumptions to use the boxplot. Nevertheless, it does not make sense to use the boxplot for small sample size. In this case, we added another parameter in Outlier Detection Module to tune the minimum sample size to apply this rule. Besides, it is known that the logarithmic function is useful to stable the data distribution, hence the user can choose to apply the logarithmic before to use the boxplot rule, which transforms the method more conservative, i.e., fewer values will be considered as outliers. In Figure 4.3 is shown a screenshot of the Outlier Detection Module. Note that there is a dialog box to select which source the user wishes to apply the detection of outliers. This option allows the user to choose between the data table fishtrade_data_imputed_validated or fishtrade_outlier_corrected. Function: od_box_plot Figure 4.3: Outlier Detection Module: list of parameters to be used on this module. Correction Once the outlier has been detected, a correction is proposed automatically to be validated by the expert later. The method of correction for outliers detected through the boxplot is made by drawing randomly from a \\(Uniform(a, b)\\) distribution, where the limits of the distributions are: Let be \\(z\\) a value detected as a outlier by the boxplot rule. If \\(z &lt; \\text{minimum} \\Rightarrow a = \\text{minimum}\\) If \\(z &lt; \\text{minimum} \\Rightarrow b = \\text{median}\\) If \\(z &gt; \\text{maximum} \\Rightarrow a = \\text{median}\\) If \\(z &gt; \\text{maximum} \\Rightarrow b = \\text{maximum}\\) While the value is considered as an outlier, draws from Uniform distribution a correction proposal. The idea behind this method is to trust that the outlier detected indeed is discrepant, but it is not too much great or small. Therefore, we select a value randomly from the half of the data distribution in order to “correct” this value. In Figure 4.4, we show a illustration of the boxplot correction. Figure 4.4: Illustration of the boxplot correction.. 4.1.2 Time Series The Time Series method is applied only for those aggregations with more than \\(s\\) sequenctial years available. This parameter \\(s\\) is shown in Figure 4.3 as “Sequential length”. Another parameter is the logarithmic, the user can choose if it will be applied the logarithmic over the target variable or not. The outliers are identified by fitting a loess curve for non-seasonal data and via a periodic STL decomposition for seasonal data. If the residuals, difference between fitted and observed values, lie outside the range \\(\\pm{2}(q_{0.9}-q_{0.1})\\) where \\(q_p\\) is the \\(p-\\)quantile of the residuals, then they will be considered as outliers. For a Gaussian distribution, it will identify less than \\(1\\) point in \\(3\\) million as an outlier. In Figure 4.5, we show an example of time series and its respectively loess curve fitted. Note that, the loess curve follows the data trend. In this example, it is easy to identify the outlier candidate. The next step is to compute the difference between the curves to get the residuals. Figure 4.5: Time series of the data observed and the loess curve fitted. In Figure 4.6, we show the histogram of the residuals as well as the limits used to identify the outliers. Note that, there is only one value that lies outside of the interval, hence this value is considered as outlier. The limits are defined as following: Compute the quantiles \\(q_{0.25}\\), and \\(q_{0.75}\\). Compute the interquartile range : \\(IQR = q_{0.75} - q_{0.25}\\) Limits: \\(\\text{liminf} = q_{0.25} - 3 \\times IQR\\) \\(\\text{limsup} = q_{0.75} + 3 \\times IQR\\) Figure 4.6: Histogram of the residuals and their respectively limits. Correction In the Time Series method, the correction is performed by replacing the values detected as outliers by fitted values. In Figure 4.7, we show how the correction is performed over the time series method. Function: od_ts_toolbox Figure 4.7: Fitted values used as correction proposal. 4.2 Examples The outlier detection methods are applied in the unit value (uv) variable, which is the ratio between the monetary transaction value and its weight. In this first step of this procedure, we attempt to figure out outliers in the aggregate level, and then we try to fix the transactions (disaggregated level) that were responsible for generating the outliers detected. The aggregated level means to compute the unit value by reporter, flow, and FAO code, i.e., for each combination of reporter, flow, and FAO code we calculate the ratio between the summing of the monetary value and the summing of the weight. For instance, in Table 1 is shown a subset from the full data using the following parameters: reporter: 76 year: 2005 flow: 1 faocode: 292.9.1.90 To calculate the unit value in the aggregate level, it is needed to apply the equation below: \\[uv = \\frac{\\sum_{p = 1}^{P} value_p}{\\sum_{p = 1}^{P} weight_p}\\] where \\(value_p\\) is the monetary value from the p-th partner, as well as \\(weight_p\\) is the transaction weight, \\(P\\) is the total of partners in this given combination, in this small example \\(P = 12\\). In order to make this report comprehensible, we show the uv calculation step-by-step as following: \\[\\begin{align} uv &amp; = \\frac{65438+1910 + \\cdots + 44329+438234}{73173+613 + \\cdots + 5949+93719} \\\\ \\\\ &amp; = \\frac{1,893,528}{1,805,531} \\\\ \\\\ &amp; = 1.05 \\end{align}\\] If we repeat it procedure for all available year for this combination, we will find the values shown in Table 2. The highlighted row shows the uv computed previously, as shown in the equations sequence. In Figure 1 is shown the same information stored in Table 1, i.e., the unit value computed in the aggregated level by year. The outlier can be easily identified when we look to the graphic below. The uv seems to be a stable behavior from 2000 to 2011 when you analyze Figure 1. However, in 2012 a sharp increase in the uv is noted. On the other hand, when we look at Figure 2, that is the same information, but without the year 2012, so it is possible to see clearly the increasing trend starting in 2007. Figure 4.8: Figure 1: The whole time series of imports. Figure 4.9: Figure 2: The time series of imports without the year 2012. Despite the visual approach works well to identify the possible outliers, it is not possible to check each graphic to figure out the outliers. Therefore, it needs to use a general rule that can be applied in each combination. In the next section, we show two methods to figure out outliers in the trade data, the first one is the Boxplot, and the second one is the Median Absolute Deviation (MAD). 4.3 Boxplot One of the methods to try figured out outlier in the aggregated data is the boxplot rule. Set the coefficient \\(k\\), for instance \\(k = 5\\). Compute the percentiles: 25% (\\(Q_1\\)), and 75% (\\(Q_3\\)). Compute the interquartile range (IQR): \\(IQR = Q_3 - Q_1\\) Compute \\(\\text{limsup} = Q_3 + k \\times IQR\\) Compute \\(\\text{liminf} = Q_1 - k \\times IQR\\) If \\(uv &gt; \\text{limsup} \\mid uv &lt; \\text{liminf}\\), then \\(uv\\) is a outlier. The IQR is a measure of variability, based on dividing a data set into quartiles. Quartiles divide a rank-ordered data set into four equal parts. The values that separate parts are called the first, second, and third quartiles; and they are denoted by Q1, Q2, and Q3, respectively. 4.3.1 Example \\(k = 5\\) Compute the percentiles: \\(Q_1 = 1.167\\) \\(Q_3 = 1.788\\) \\(IQR = Q_3 - Q_1 = 0.621\\) \\(\\text{limsup} = 4.893\\) \\(\\text{liminf} = -1.938\\) Figure 4.10: Figure 3: Boxplot exemplifying the outlier detection. 4.4 Locally Estimated Scatterplot Smoothing (LOESS) To fix the transactions that generated the outlier in the aggregated level is fitted a LOESS model considering the log(uv) as variable response and year as the covariate. The rows which the year was detected as outlier were removed before to fit the model. Once the model is fitted, it is used to predict a new value to the given year. In our example, the year is 2012 and the value predicted by model is 4.701. 4.4.1 Example Figure 4.11: Figure 4: Correction of the outlier using the LOESS model. "],
["sec-mirroring.html", "5 Trade partners 5.1 Scheda", " 5 Trade partners Some countries do not report trade. A country might not report trade (no imports and no exports), or no imports, or no exports. In these cases, we estimate their trade by applying what the reporters of the non-reporting country reported. For example, if Ecuador does not report export data we will estimate Ecuador’’s exports with the imports data reported by all countries where the partner was Ecuador. For this reason, the mirroring process is implemented when data from all reporting countries was processed (mapped, missing weights imputed, and validated), i.e. at the very end of the process. The module generates the list of non-reporting countries: these are the countries present as partners but missing as reporters. For these countries the mirroring routine is applied: the corresponding trade of the non-reporting countries are extracted from the partners inverting the flows. The quantities are the same while the values are corrected by a factor of 12% due to the CIF/FOB conversion. Functions: mirrorNonReporters_fi flowsToMirror run_mirroring In Figure 5.1 is introduced the mirroring workflow. The tables that store the list of non-reporting and the list of donors are working in memory, i.e., there is no data saved on hard disk or in the SWS. They are considered as temporary tables. In the Mirroring Module, the user is able to check the quality of the mirroring through data visualization, aggregations by several levels and filters by commodity codes. Figure 5.1: Mirroring Module Flow. Figure 5.2 shows the buttons to check the non-reporting countries, the list of donor to be removed when some country reported data not reliable. Figure 5.2: Check the non-reporting. Figure 5.3 shows the options for data aggregation and also the time series of the commodity. The weigh, value, or unit value can be choosen to visualise the time series. Figure 5.3: Screenshot of the Mirroring validation: time series. Figure 5.4 shows the editable table. In this stage, the user can adjust any data mirrored. For instance, the user can perform a manual intervention if he is not satisfied with estimates. Figure 5.4: Screenshot of the Mirroring validation: editable data. 5.1 Scheda Once the country to estimate, the flow, the year, and the list of potential donors has been selected, the tool should build the data by searching in the validated trade data for data where the country to estimate appears as a partner. Then the data will need to be transformed: partner becomes est_reporter, reporter becomes donor, and flow becomes reporter_flow. This newly created data will need to be mapped. Two situations exist: The combination est_reporter, reporter_flow, donor_code, donor_tariff_line exists in the Partnership map table then the est_reporter_scheda, and the isscfc_code are reused and the end_year is updated in the trade map. The combination est_reporter, reporter_flow, donor_code, donor_tariff_line does not exist in the Partnership map table. A new record needs is added in the Partnership map, using the mapping information from the donor (donor_tariff_line, donor_scheda, donor_isscfc_code, donor_isscfc_id) and a new est_reporter_scheda is generated. The startyear and endyear of this new mapping in the Parternship map table is equal to the year selected at the beginning of the mirroring process. "],
["appendix-a.html", "A Appendix A Datatables", " A Appendix A Datatables Data built Datatable: fishtrade_built_data Domain: Fisheries Commodities Usage: This table is the output from the module Data Builder, and will be used as the input for the Mapping module. In this stage, the data still as raw data because only the countries code have been converted. In Table A.1, we show the description for each field which composed the data table. Table A.1: Columns description for the datatable: fishtrade_built_data Field Description year year with four digits rep Comtrade M49 code for the reporter country prt Comtrade M49 code for the partner country flow Trade flow. Imports(=1), exports (=2), re-imports(=3), re-exports(=4) comm Comodity code. HS commodity code at the Tariff Line level hsrep Commodity Classification value monetary value weight weight in kilogram qty quatity qunit quantity unit hslength number of digits at comm variable src source Trade mapping table The trade mapping table was built by FIAS team in order to store all links between Tariff Line codes and ISSCFC codes. The key variables for the datatable are: rep, flow, tariff_line, isscfc_code, startyear, and endyear. Datatable: fishtrade_trade_map Domain: Fisheries Commodities Usage: This datatable is used in the Mapping Module to atempt to map the Tariff Line code reported by the countries. For some new commodities there is no link to ISSCFC code, in this cases the user is able to update the table through the Mapping Module. Table A.2 shows the description of each field which compose the datatable fishtrade_trade_map under domain Fisheries Commodities. Table A.2: Columns description for the datatable: fishtrade_trade_map Field Description rep Reporter country code country Reporter country name tariff_line Tariff line code tariff_line_descr Tariff line description remark Remarks flow Trade flow scheda Scheda code startyear Start year: the mapping is valid from this year endyear End year: the mapping is valid until thie year isscfc_code Internal code for ISSCFC isscfc_id ISSCFC code isscfc_descr ISSCFC description hs6_use If the HS6 was used to map Table to map: HS code to be mapped This datatable is considered a working table once that is almost a copy from the datatable fishtrade_table_to_map. Datatable: fishtrade_table_to_map Domain: Fisheries Commodities Usage: All missing mapping is store in this data table, and it is also used to save the current status of the mapping by the user. When the user save the mapping in Shiny app, all changes are saved first in this table. If the user decides to update the mapping, then the data from this table is exported to data table fishtrade_trade_map, which stores the final mapping. Table A.3: Columns description for the datatable: fishtrade_table_to_map Field Description rep Reporter country code country Reporter country name tariff_line Tariff line code flow Trade flow isscfc_code ISSCFC code isscfc_id Internal code for ISSCFC tariff_line_descr Tariff line description isscfc_descr ISSCFC description startyear Start year: the mapping is valid from this year endyear End year: the mapping is valid until thie year remark Remarks scheda Scheda code hs6_use If the HS6 was used to map unmapped Flag: True = code not mapped; False = code mapped toimprove Flag: True = code can be improved; False = code mapped at the tariff line code HS masterfile This table is populated through the package faoebx5 which allows us to access all data available in the EBX5 database. It stores the mapping between HS at the six level and the ISSCFC code. Datatable: EBX5 Domain: EBX5 Usage: The table used in the Mapping Module when all links available on the data table fishtrade_trade_map have already been used to map the trade data, but it still missing some codes to be mapped. Therefore, in this case, we should use the mapping at six digits level, hence this must be used. Note that, this is used only for non-European countries. Table A.4: Columns description for the table: hs_masterfile.rds Field Description hs HS code at the 6 digits levels faocode_hs6 ISSCFC code hs2012 Commodity classification HS5 hs2007 Commodity classification HS4 hs2002 Commodity classification HS3 hs1996 Commodity classification HS2 hs1992 Commodity classification HS1 english ISSCFC description CN Masterfile This table is populated through the package faoebx5 which allows us to access all data available in the EBX5 database. It stores the mapping between HS at the CN level (8 digits) and the ISSCFC code. Datatable: EBX5 Domain: EBX5 Usage: The table used in the Mapping Module when all links available on the data table fishtrade_trade_map have already been used to map the trade data, but it still missing some codes to be mapped. Therefore, in this case, we should use the mapping at eight digits level, hence this must be used. Note that, this is used only for European countries. Table A.5: Columns description for the table: eucn_masterfile_latest.rds Field Description CN_Code CN code at the 8 digits levels ISSCFC ISSCFC code NameEn ISSCFC description Data imputed This is the datatable which stores the output from the Imputation Module to be validated by the expert. Datatable: fishtrade_data_imputed Domain: Fisheries Commodities Usage: Once that the data have been mapped, they are used as the input to the Imputation Module, and after the end of this process the data imputed is stored in this table to be validated by the expert. Table A.6: Columns description for the datatable: fishtrade_data_imputed Field Description year NA rep NA prt NA flow NA comm NA value NA weight NA qty NA qunit NA hslength NA percvanna NA imputation_method NA Data imputed and validated It stores the data imputed and validated by the user. Datatable: fishtrade_data_imputed Domain: Fisheries Commodities Usage: This is almost a copy from the fishtrade_data_imputed datatable, but in this datatable the user is not allowed to change anything. All changes should be done over the datatable fishtrade_data_imputed, and then can be export to the final data table fishtrade_data_imputed_validated. Table A.7: Columns description for the datatable: fishtrade_data_imputed_validated Field Description year year with four digits rep Comtrade M49 code for the reporter country prt Comtrade M49 code for the partner country flow Trade flow. Imports(=1), exports (=2), re-imports(=3), re-exports(=4) comm Comodity code. HS commodity code at the Tariff Line level value monetary value weight weight in kilogram qty quatity qunit quantity unit hslength number of digits at comm variable imputation_method method used to impute missing data Outliers detected It stores the list of outliers detected as well as the level of aggregation, and criteria used to detect the outlier. Datatable: fishtrade_outliers_detected Domain: Fisheries Commodities Usage: It is one of the outputs of the Outlier detection Module. In this table is stored all outliers detected in this process. Table A.8: Columns description for the datatable: fishtrade_outliers_detected Field Description year Year rep Reporter country flow Trade flow level_aggregation Level of aggregation that the outlier was detected (FAO group, HS2, HS4, HS6, Tariff Line) code_aggregation Code of the aggregation criteria Criteria used to detect the outlier (Unit Value, Weight, Value) value Value USD correction Correction proposed method Method used to detect (boxplot, time series model) checked Flag to inform whether the outlier has been checked validated Flag to inform whether the outlier has been validated (correction proposed has been accepted) Outliers corrected It stores the whole data after pass through the Outlier detection Module with the original value, as well as the proposal correction (automatic) for the outliers detected. This table is a working table, once that the user has to validate the outliers detected and also the correction proposed for them. Datatable: fishtrade_outlier_corrected Domain: Fisheries Commodities Usage: It is one of the outputs of the Outlier detection Module. In this table is stored all data after the outlier detection process with the correction proposed to be accepted or not by the expert. Table A.9: Columns description for the datatable: fishtrade_outlier_corrected Field Description year Year rep Reporter country prt Partner country flow Trade flow fao_group 1-9, A. Defined in EBX under Commodity-&gt;FAOmajor_level2 scheda Internal identifier in Commodit (our old system) for a Country | Trade Flow | Fao Group | Tariff line code combination isscfc_code ISSCFC Code (available in EBX) tariff_line Tariff Line code tariff_line_descr Tariff Line Description isscfc_id Identifier of the ISSCFC code as defined in EBX. value Value in USD weight Weight in kilogram weight_correction Weight after a possible correction value_correction Value after a possible correction weight_method Method used to correct the weight value value_method Method used to correct the monetary value level_agg Level of aggregation which was detected the possible outlier criteria Criteria used to detect the outlier (Unit Value, Weight, Value) accepted Flag for outlier correction. Whether the outlier correction was accepted imputation_method Method used to impute the value. Outliers validated It stores the data after the validation of the expert. Datatable: fishtrade_outlier_validated Domain: Fisheries Commodities Usage: It is one of the outputs of the Outlier detection Module. In this table is stored all data after the outlier detection process with the correction proposed and validated by the expert. Table A.10: Columns description for the datatable: fishtrade_outlier_validated Field Description year Year rep Reporter country prt Partner country flow Trade flow fao_group 1-9, A. Defined in EBX under Commodity-&gt;FAOmajor_level2 scheda Internal identifier in Commodit (our old system) for a Country | Trade Flow | Fao Group | Tariff line code combination isscfc_code ISSCFC Code (available in EBX) tariff_line Tariff Line code tariff_line_descr Tariff Line Description isscfc_id Identifier of the ISSCFC code as defined in EBX. value Value in USD weight Weight in kilogram weight_correction Weight after a possible correction value_correction Value after a possible correction weight_method Method used to correct the weight value value_method Method used to correct the monetary value level_agg Level of aggregation which was detected the possible outlier criteria Criteria used to detect the outlier (Unit Value, Weight, Value) accepted Flag for outlier correction. Whether the outlier correction was accepted imputation_method Method used to impute the value. Data mirrored It stores the whole data after all stages of validation including those countries estimated through the mirroring process. Datatable: fishtrade_mirrored Domain: Fisheries Commodities Usage: It is used to validate the mirroring process. Table A.11: Columns description for the datatable: fishtrade_mirrored Field Description year Year in which the trade occurred rep Reporter country prt Partner country flow Trade flow fao_group FAO major group scheda Scheda code isscfc_code ISSCFC code tariff_line Tariff Line code (National Code) tariff_line_descr Tariff Line descripton isscfc_id Identifier of the ISSCFC code as defined in EBX. value Monetary value in USD weight Weight in kilogram weight_correction Weight after a possible correction value_correction Value after a possible correction weight_method Method used to correct the weight value value_method Method used to correct the monetary value level_agg Level of aggregation which was detected the possible outlier criteria Criteria used to detect the outlier (Unit Value, Weight, Value) accepted Flag for outlier correction. Whether the outlier correction was accepted imputation_method Method used to impute the value. mirrored Flag for mirrored country. Whether the country was estimated through the mirroring process remark Remarks Partnership mapping table The mappings for the countries previously estimated through the mirroring process. The non-reporting countries are labelled est_reporter and the partners are labelled donor. Datatable: fishtrade_partnership_map Domain: Fisheries Commodities Usage: This table is used to retrieve the scheda used in the mirroring process done in the previous years. Table A.12: Columns description for the datatable: fishtrade_partnership_map Field Description est_reporter_code Reporter code estimated through mirroring process est_reporter_flow Flow estimated through mirroring process est_reporter_scheda Scheda est_reporter_remarks Remarks donor_code Donor reporter code donor_tariff_line Tariff Line donated donor_tariff_line_desc Tariff line description donor_isscfc_code ISSCFC code donor_isscfc_id Iternal code for the ISSCFC donor_scheda Scheda donor_flow Flow donated startyear Start year endyear End year Helper data tables Maximum Scheda It stores the maximum scheda for each combination betwee Datatable: fishtrade_max_scheda Domain: Fisheries Commodities Usage: This table is used to retrieve the scheda used in the mirroring process made in the previous years. Table A.13: Columns description for the datatable: fishtrade_max_scheda Field Description rep Reportr country flow Trade flow fao_group FAO major group max_scheda Latest scheda for the combination among reporter, flow, and FAO group. HS blocked to impute It is a list of commodities code to be used in the Imputation Module. Datatable: fishtrade_hs_not_impute Domain: Fisheries Commodities Usage: This codes should not used in the imputation. For example, if a country report the value ($) of the commodity listed in this table, but does not report its weight, then this weight will not imputed. Table A.14: Columns description for the datatable: fishtrade_hs_not_impute Field Description start Start digits HS to exclude It is a list of commodities code to be excluded in the Data Builder Module. Datatable: fishtrade_param_hs_exclude Domain: Fisheries Commodities Usage: This codes should be excluded in the getting data process. Table A.15: Columns description for the datatable: fishtrade_param_hs_exclude Field Description hs_start Start digits HS to filter It is a list of commodities code to be filtered in the Data Builder Module. Datatable: fishtrade_param_hs_filter Domain: Fisheries Commodities Usage: This codes should be filtered in the getting data process. Table A.16: Columns description for the datatable: fishtrade_param_hs_filter Field Description hs_start Start digits HS non fish It is a list of commodities code to be excluded from the Mapping Module. Datatable: fishtrade_param_hs_non_fish Domain: Fisheries Commodities Usage: This codes should be excluded in the mapping process. Table A.17: Columns description for the datatable: fishtrade_param_hs_non_fish Field Description hs_start Start digits Reporter status It shows the current stage for each country built. Datatable: fishtrade_reporter_workflow Domain: Fisheries Commodities Usage: It is used to follow the country-year. Table A.18: Columns description for the datatable: fishtrade_reporter_workflow Field Description year Year associated to the data builder rep Country code - M49 is_built_data Whether the data was built is_run_mapping Whether the mapping process was performed is_mapped_data Whether the mapping process was validated is_run_imputation Whether the imutation process was performed is_imputed_data Whether the imputation process was validated is_run_outlier Whether the outlier detection was performed is_outlier_validated Whether the outlier detection was validated is_run_mirroring Whether the mirroring process was performed is_mirroring_validated Whether the mirroring process was validated Data sources Historical trade data Table A.19: Columns description for the datatable: fishtrade_data_legacy Field Description rep Reporter country flow Trade flow fao_group FAO major group scheda Scheda code. Internal identifier in Commodit (old system) for a Country | Trade Flow | Fao Group | Tariff line code combination year Year (4 digits) in which the trade occured qty Quantity qunit Quantity unit qty_mt Quantity converted in Metric Tons qty_flag Flags for the Quantity : F = Estimate, Blank = Official, - = None, . = Not available value Value as provided by the country value_unit Currency of the value provided by the country value_usd Value converted in thousand USD value_flag Flags for the Value: F = Estimate, Blank = Official, - = None, . = Not available isscfc ISSCFC Code (available in EBX) tariff_line Tariff line code (not always on 12 digits some only have 6 digits) tariff_line_descr National description of the tariff line code remarks Remarks field, in which the user could key in a comment. The remarks field is not year specific so it is the same across all years for a Country | Trade Flow | Fao Group | Tariff line code combination isscfc_id Identifier of the ISSCFC code as defined in EBX. UNSD Eurostat TDM Table A.20: Columns description for the datatable: fishtrade_tdm_data Field Description chapter Commodity chapter rep Reporter country tyear year with four digits curr Currency hsrep Commodity classification flow Trade flow repcurr Reporter currency comm Commodity code prt Partner code weight Wieght in kilograms qty Quantity qunit Quantity unit tvalue Value in USD est Whether the value is estimated ht Other data sources Table A.21: Columns description for the datatable: fishtrade_other_sources Field Description chapter Commodity chapter rep Reporter country tyear year with four digits curr Currency hsrep Commodity classification flow Trade flow repcurr Reporter currency comm Commodity code prt Partner code weight Wieght in kilograms qty Quantity qunit Quantity unit tvalue Value in USD est Whether the value is estimated ht "]
]
